### available variables specially in record_transformer

${record['key']}
${hostname} ${host}
${tag}
${tag_parts[1]}
${time}

### using ruby functions

#{Socket.gethostname}
#{worker_id}



### adding new field to log record
<filter **.**>
    @type record_transformer
    enable_ruby
    <record>
        hostname "#{Socket.gethostname}"
        tag ${tag}
    </record>
</filter>



### editing fields of a log record

<filter **.**>
    @type record_transformer
    enable_ruby
    <record>
        message ${record["message"][0..2]} ${time} ${record["data"][3, record["data"].length]}
    </record>
</filter>

<filter **.**>
    @type record_transformer
    enable_ruby true
    <record>
        timestamp "${timestamp.to_datetime.iso8601(6)}"
    </record>
</filter>



### using conditions(complex_logic) with record_modifier...see also routing
### temporal key trick like
<filter develop.json.**>
  @type record_modifier
  @id record-modifier-first-json
  remove_keys _dummy_
  enable_ruby
  <record>
    ### complex_logic, adding a key-value based on value of a field
    ### check ; ### 
    # _dummy_ ${if (record['service'] == 'speech' or  record['service'] == 'nlp') then record['test'] = 'good.test.ai' else record['test'] = 'bad.test.ai'; end;}
    _dummy_ ${if (record['service'] == 'speech' or  record['service'] == 'nlp') then record['test'] = 'good.test.ai'; else record['test'] = 'bad.test.ai'; end;}
  </record>
</filter>

### complex_logic, adding a key-value based on existence of a key
${if record.has_key?('foo'); record['bar'] = 'Hi!'; end; nil}


### it is risky when working with tags
### maybe record['temptype'] has no value...so what happens to tag